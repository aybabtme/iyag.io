/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var iyag_io_chat_entry_pb = require('../../../iyag.io/chat/entry_pb.js');
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.exportSymbol('proto.iyag.io.chat.chatsrv.ArchiveReq', null, global);
goog.exportSymbol('proto.iyag.io.chat.chatsrv.ArchiveRes', null, global);
goog.exportSymbol('proto.iyag.io.chat.chatsrv.ListenReq', null, global);
goog.exportSymbol('proto.iyag.io.chat.chatsrv.ListenRes', null, global);
goog.exportSymbol('proto.iyag.io.chat.chatsrv.PostReq', null, global);
goog.exportSymbol('proto.iyag.io.chat.chatsrv.PostRes', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iyag.io.chat.chatsrv.ListenReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iyag.io.chat.chatsrv.ListenReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.iyag.io.chat.chatsrv.ListenReq.displayName = 'proto.iyag.io.chat.chatsrv.ListenReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iyag.io.chat.chatsrv.ListenReq.prototype.toObject = function(opt_includeInstance) {
  return proto.iyag.io.chat.chatsrv.ListenReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iyag.io.chat.chatsrv.ListenReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iyag.io.chat.chatsrv.ListenReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    from: (f = msg.getFrom()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iyag.io.chat.chatsrv.ListenReq}
 */
proto.iyag.io.chat.chatsrv.ListenReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iyag.io.chat.chatsrv.ListenReq;
  return proto.iyag.io.chat.chatsrv.ListenReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iyag.io.chat.chatsrv.ListenReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iyag.io.chat.chatsrv.ListenReq}
 */
proto.iyag.io.chat.chatsrv.ListenReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iyag.io.chat.chatsrv.ListenReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iyag.io.chat.chatsrv.ListenReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iyag.io.chat.chatsrv.ListenReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iyag.io.chat.chatsrv.ListenReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string channel_id = 1;
 * @return {string}
 */
proto.iyag.io.chat.chatsrv.ListenReq.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.iyag.io.chat.chatsrv.ListenReq.prototype.setChannelId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp from = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.iyag.io.chat.chatsrv.ListenReq.prototype.getFrom = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.iyag.io.chat.chatsrv.ListenReq.prototype.setFrom = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.iyag.io.chat.chatsrv.ListenReq.prototype.clearFrom = function() {
  this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.iyag.io.chat.chatsrv.ListenReq.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iyag.io.chat.chatsrv.ListenRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iyag.io.chat.chatsrv.ListenRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.iyag.io.chat.chatsrv.ListenRes.displayName = 'proto.iyag.io.chat.chatsrv.ListenRes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iyag.io.chat.chatsrv.ListenRes.prototype.toObject = function(opt_includeInstance) {
  return proto.iyag.io.chat.chatsrv.ListenRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iyag.io.chat.chatsrv.ListenRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iyag.io.chat.chatsrv.ListenRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && iyag_io_chat_entry_pb.Entry.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iyag.io.chat.chatsrv.ListenRes}
 */
proto.iyag.io.chat.chatsrv.ListenRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iyag.io.chat.chatsrv.ListenRes;
  return proto.iyag.io.chat.chatsrv.ListenRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iyag.io.chat.chatsrv.ListenRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iyag.io.chat.chatsrv.ListenRes}
 */
proto.iyag.io.chat.chatsrv.ListenRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iyag_io_chat_entry_pb.Entry;
      reader.readMessage(value,iyag_io_chat_entry_pb.Entry.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iyag.io.chat.chatsrv.ListenRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iyag.io.chat.chatsrv.ListenRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iyag.io.chat.chatsrv.ListenRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iyag.io.chat.chatsrv.ListenRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iyag_io_chat_entry_pb.Entry.serializeBinaryToWriter
    );
  }
};


/**
 * optional iyag.io.chat.Entry entry = 1;
 * @return {?proto.iyag.io.chat.Entry}
 */
proto.iyag.io.chat.chatsrv.ListenRes.prototype.getEntry = function() {
  return /** @type{?proto.iyag.io.chat.Entry} */ (
    jspb.Message.getWrapperField(this, iyag_io_chat_entry_pb.Entry, 1));
};


/** @param {?proto.iyag.io.chat.Entry|undefined} value */
proto.iyag.io.chat.chatsrv.ListenRes.prototype.setEntry = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.iyag.io.chat.chatsrv.ListenRes.prototype.clearEntry = function() {
  this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.iyag.io.chat.chatsrv.ListenRes.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iyag.io.chat.chatsrv.PostReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iyag.io.chat.chatsrv.PostReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.iyag.io.chat.chatsrv.PostReq.displayName = 'proto.iyag.io.chat.chatsrv.PostReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iyag.io.chat.chatsrv.PostReq.prototype.toObject = function(opt_includeInstance) {
  return proto.iyag.io.chat.chatsrv.PostReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iyag.io.chat.chatsrv.PostReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iyag.io.chat.chatsrv.PostReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    threadId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    entry: (f = msg.getEntry()) && iyag_io_chat_entry_pb.Entry.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iyag.io.chat.chatsrv.PostReq}
 */
proto.iyag.io.chat.chatsrv.PostReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iyag.io.chat.chatsrv.PostReq;
  return proto.iyag.io.chat.chatsrv.PostReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iyag.io.chat.chatsrv.PostReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iyag.io.chat.chatsrv.PostReq}
 */
proto.iyag.io.chat.chatsrv.PostReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setThreadId(value);
      break;
    case 3:
      var value = new iyag_io_chat_entry_pb.Entry;
      reader.readMessage(value,iyag_io_chat_entry_pb.Entry.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iyag.io.chat.chatsrv.PostReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iyag.io.chat.chatsrv.PostReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iyag.io.chat.chatsrv.PostReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iyag.io.chat.chatsrv.PostReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getThreadId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      iyag_io_chat_entry_pb.Entry.serializeBinaryToWriter
    );
  }
};


/**
 * optional string channel_id = 1;
 * @return {string}
 */
proto.iyag.io.chat.chatsrv.PostReq.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.iyag.io.chat.chatsrv.PostReq.prototype.setChannelId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string thread_id = 2;
 * @return {string}
 */
proto.iyag.io.chat.chatsrv.PostReq.prototype.getThreadId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.iyag.io.chat.chatsrv.PostReq.prototype.setThreadId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional iyag.io.chat.Entry entry = 3;
 * @return {?proto.iyag.io.chat.Entry}
 */
proto.iyag.io.chat.chatsrv.PostReq.prototype.getEntry = function() {
  return /** @type{?proto.iyag.io.chat.Entry} */ (
    jspb.Message.getWrapperField(this, iyag_io_chat_entry_pb.Entry, 3));
};


/** @param {?proto.iyag.io.chat.Entry|undefined} value */
proto.iyag.io.chat.chatsrv.PostReq.prototype.setEntry = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.iyag.io.chat.chatsrv.PostReq.prototype.clearEntry = function() {
  this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.iyag.io.chat.chatsrv.PostReq.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iyag.io.chat.chatsrv.PostRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iyag.io.chat.chatsrv.PostRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.iyag.io.chat.chatsrv.PostRes.displayName = 'proto.iyag.io.chat.chatsrv.PostRes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iyag.io.chat.chatsrv.PostRes.prototype.toObject = function(opt_includeInstance) {
  return proto.iyag.io.chat.chatsrv.PostRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iyag.io.chat.chatsrv.PostRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iyag.io.chat.chatsrv.PostRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && iyag_io_chat_entry_pb.Entry.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iyag.io.chat.chatsrv.PostRes}
 */
proto.iyag.io.chat.chatsrv.PostRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iyag.io.chat.chatsrv.PostRes;
  return proto.iyag.io.chat.chatsrv.PostRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iyag.io.chat.chatsrv.PostRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iyag.io.chat.chatsrv.PostRes}
 */
proto.iyag.io.chat.chatsrv.PostRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iyag_io_chat_entry_pb.Entry;
      reader.readMessage(value,iyag_io_chat_entry_pb.Entry.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iyag.io.chat.chatsrv.PostRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iyag.io.chat.chatsrv.PostRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iyag.io.chat.chatsrv.PostRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iyag.io.chat.chatsrv.PostRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iyag_io_chat_entry_pb.Entry.serializeBinaryToWriter
    );
  }
};


/**
 * optional iyag.io.chat.Entry entry = 1;
 * @return {?proto.iyag.io.chat.Entry}
 */
proto.iyag.io.chat.chatsrv.PostRes.prototype.getEntry = function() {
  return /** @type{?proto.iyag.io.chat.Entry} */ (
    jspb.Message.getWrapperField(this, iyag_io_chat_entry_pb.Entry, 1));
};


/** @param {?proto.iyag.io.chat.Entry|undefined} value */
proto.iyag.io.chat.chatsrv.PostRes.prototype.setEntry = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.iyag.io.chat.chatsrv.PostRes.prototype.clearEntry = function() {
  this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.iyag.io.chat.chatsrv.PostRes.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iyag.io.chat.chatsrv.ArchiveReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iyag.io.chat.chatsrv.ArchiveReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.iyag.io.chat.chatsrv.ArchiveReq.displayName = 'proto.iyag.io.chat.chatsrv.ArchiveReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iyag.io.chat.chatsrv.ArchiveReq.prototype.toObject = function(opt_includeInstance) {
  return proto.iyag.io.chat.chatsrv.ArchiveReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iyag.io.chat.chatsrv.ArchiveReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iyag.io.chat.chatsrv.ArchiveReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iyag.io.chat.chatsrv.ArchiveReq}
 */
proto.iyag.io.chat.chatsrv.ArchiveReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iyag.io.chat.chatsrv.ArchiveReq;
  return proto.iyag.io.chat.chatsrv.ArchiveReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iyag.io.chat.chatsrv.ArchiveReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iyag.io.chat.chatsrv.ArchiveReq}
 */
proto.iyag.io.chat.chatsrv.ArchiveReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iyag.io.chat.chatsrv.ArchiveReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iyag.io.chat.chatsrv.ArchiveReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iyag.io.chat.chatsrv.ArchiveReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iyag.io.chat.chatsrv.ArchiveReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string channel_id = 1;
 * @return {string}
 */
proto.iyag.io.chat.chatsrv.ArchiveReq.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.iyag.io.chat.chatsrv.ArchiveReq.prototype.setChannelId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iyag.io.chat.chatsrv.ArchiveRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iyag.io.chat.chatsrv.ArchiveRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.iyag.io.chat.chatsrv.ArchiveRes.displayName = 'proto.iyag.io.chat.chatsrv.ArchiveRes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iyag.io.chat.chatsrv.ArchiveRes.prototype.toObject = function(opt_includeInstance) {
  return proto.iyag.io.chat.chatsrv.ArchiveRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iyag.io.chat.chatsrv.ArchiveRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iyag.io.chat.chatsrv.ArchiveRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iyag.io.chat.chatsrv.ArchiveRes}
 */
proto.iyag.io.chat.chatsrv.ArchiveRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iyag.io.chat.chatsrv.ArchiveRes;
  return proto.iyag.io.chat.chatsrv.ArchiveRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iyag.io.chat.chatsrv.ArchiveRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iyag.io.chat.chatsrv.ArchiveRes}
 */
proto.iyag.io.chat.chatsrv.ArchiveRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iyag.io.chat.chatsrv.ArchiveRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iyag.io.chat.chatsrv.ArchiveRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iyag.io.chat.chatsrv.ArchiveRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iyag.io.chat.chatsrv.ArchiveRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.iyag.io.chat.chatsrv);
