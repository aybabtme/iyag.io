// Code generated by protoc-gen-go. DO NOT EDIT.
// source: iyag.io/chat/chatsrv/channel.proto

package chatsrv

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import chat "iyag.io/chat"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EventAuth struct {
	// TODO: just stubbed out for now, do this properly
	AuthorId             string   `protobuf:"bytes,1,opt,name=author_id,json=authorId" json:"author_id,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventAuth) Reset()         { *m = EventAuth{} }
func (m *EventAuth) String() string { return proto.CompactTextString(m) }
func (*EventAuth) ProtoMessage()    {}
func (*EventAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_channel_9b00e7170ce8ee4c, []int{0}
}
func (m *EventAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventAuth.Unmarshal(m, b)
}
func (m *EventAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventAuth.Marshal(b, m, deterministic)
}
func (dst *EventAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventAuth.Merge(dst, src)
}
func (m *EventAuth) XXX_Size() int {
	return xxx_messageInfo_EventAuth.Size(m)
}
func (m *EventAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_EventAuth.DiscardUnknown(m)
}

var xxx_messageInfo_EventAuth proto.InternalMessageInfo

func (m *EventAuth) GetAuthorId() string {
	if m != nil {
		return m.AuthorId
	}
	return ""
}

func (m *EventAuth) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type EventCreateReq struct {
	Auth                 *EventAuth `protobuf:"bytes,1,opt,name=auth" json:"auth,omitempty"`
	Uuid                 string     `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	ChannelName          string     `protobuf:"bytes,3,opt,name=channel_name,json=channelName" json:"channel_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *EventCreateReq) Reset()         { *m = EventCreateReq{} }
func (m *EventCreateReq) String() string { return proto.CompactTextString(m) }
func (*EventCreateReq) ProtoMessage()    {}
func (*EventCreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_channel_9b00e7170ce8ee4c, []int{1}
}
func (m *EventCreateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventCreateReq.Unmarshal(m, b)
}
func (m *EventCreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventCreateReq.Marshal(b, m, deterministic)
}
func (dst *EventCreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventCreateReq.Merge(dst, src)
}
func (m *EventCreateReq) XXX_Size() int {
	return xxx_messageInfo_EventCreateReq.Size(m)
}
func (m *EventCreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EventCreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_EventCreateReq proto.InternalMessageInfo

func (m *EventCreateReq) GetAuth() *EventAuth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *EventCreateReq) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *EventCreateReq) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

type EventCreateRes struct {
	EventMeta            *chat.EventMeta `protobuf:"bytes,1,opt,name=event_meta,json=eventMeta" json:"event_meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *EventCreateRes) Reset()         { *m = EventCreateRes{} }
func (m *EventCreateRes) String() string { return proto.CompactTextString(m) }
func (*EventCreateRes) ProtoMessage()    {}
func (*EventCreateRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_channel_9b00e7170ce8ee4c, []int{2}
}
func (m *EventCreateRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventCreateRes.Unmarshal(m, b)
}
func (m *EventCreateRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventCreateRes.Marshal(b, m, deterministic)
}
func (dst *EventCreateRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventCreateRes.Merge(dst, src)
}
func (m *EventCreateRes) XXX_Size() int {
	return xxx_messageInfo_EventCreateRes.Size(m)
}
func (m *EventCreateRes) XXX_DiscardUnknown() {
	xxx_messageInfo_EventCreateRes.DiscardUnknown(m)
}

var xxx_messageInfo_EventCreateRes proto.InternalMessageInfo

func (m *EventCreateRes) GetEventMeta() *chat.EventMeta {
	if m != nil {
		return m.EventMeta
	}
	return nil
}

type EventArchiveReq struct {
	Auth                 *EventAuth `protobuf:"bytes,1,opt,name=auth" json:"auth,omitempty"`
	Uuid                 string     `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	ChannelName          string     `protobuf:"bytes,3,opt,name=channel_name,json=channelName" json:"channel_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *EventArchiveReq) Reset()         { *m = EventArchiveReq{} }
func (m *EventArchiveReq) String() string { return proto.CompactTextString(m) }
func (*EventArchiveReq) ProtoMessage()    {}
func (*EventArchiveReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_channel_9b00e7170ce8ee4c, []int{3}
}
func (m *EventArchiveReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventArchiveReq.Unmarshal(m, b)
}
func (m *EventArchiveReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventArchiveReq.Marshal(b, m, deterministic)
}
func (dst *EventArchiveReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventArchiveReq.Merge(dst, src)
}
func (m *EventArchiveReq) XXX_Size() int {
	return xxx_messageInfo_EventArchiveReq.Size(m)
}
func (m *EventArchiveReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EventArchiveReq.DiscardUnknown(m)
}

var xxx_messageInfo_EventArchiveReq proto.InternalMessageInfo

func (m *EventArchiveReq) GetAuth() *EventAuth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *EventArchiveReq) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *EventArchiveReq) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

type EventArchiveRes struct {
	EventMeta            *chat.EventMeta `protobuf:"bytes,1,opt,name=event_meta,json=eventMeta" json:"event_meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *EventArchiveRes) Reset()         { *m = EventArchiveRes{} }
func (m *EventArchiveRes) String() string { return proto.CompactTextString(m) }
func (*EventArchiveRes) ProtoMessage()    {}
func (*EventArchiveRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_channel_9b00e7170ce8ee4c, []int{4}
}
func (m *EventArchiveRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventArchiveRes.Unmarshal(m, b)
}
func (m *EventArchiveRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventArchiveRes.Marshal(b, m, deterministic)
}
func (dst *EventArchiveRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventArchiveRes.Merge(dst, src)
}
func (m *EventArchiveRes) XXX_Size() int {
	return xxx_messageInfo_EventArchiveRes.Size(m)
}
func (m *EventArchiveRes) XXX_DiscardUnknown() {
	xxx_messageInfo_EventArchiveRes.DiscardUnknown(m)
}

var xxx_messageInfo_EventArchiveRes proto.InternalMessageInfo

func (m *EventArchiveRes) GetEventMeta() *chat.EventMeta {
	if m != nil {
		return m.EventMeta
	}
	return nil
}

type EventJoinReq struct {
	Auth                 *EventAuth `protobuf:"bytes,1,opt,name=auth" json:"auth,omitempty"`
	Uuid                 string     `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	ChannelName          string     `protobuf:"bytes,3,opt,name=channel_name,json=channelName" json:"channel_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *EventJoinReq) Reset()         { *m = EventJoinReq{} }
func (m *EventJoinReq) String() string { return proto.CompactTextString(m) }
func (*EventJoinReq) ProtoMessage()    {}
func (*EventJoinReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_channel_9b00e7170ce8ee4c, []int{5}
}
func (m *EventJoinReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventJoinReq.Unmarshal(m, b)
}
func (m *EventJoinReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventJoinReq.Marshal(b, m, deterministic)
}
func (dst *EventJoinReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventJoinReq.Merge(dst, src)
}
func (m *EventJoinReq) XXX_Size() int {
	return xxx_messageInfo_EventJoinReq.Size(m)
}
func (m *EventJoinReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EventJoinReq.DiscardUnknown(m)
}

var xxx_messageInfo_EventJoinReq proto.InternalMessageInfo

func (m *EventJoinReq) GetAuth() *EventAuth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *EventJoinReq) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *EventJoinReq) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

type EventJoinRes struct {
	EventMeta            *chat.EventMeta `protobuf:"bytes,1,opt,name=event_meta,json=eventMeta" json:"event_meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *EventJoinRes) Reset()         { *m = EventJoinRes{} }
func (m *EventJoinRes) String() string { return proto.CompactTextString(m) }
func (*EventJoinRes) ProtoMessage()    {}
func (*EventJoinRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_channel_9b00e7170ce8ee4c, []int{6}
}
func (m *EventJoinRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventJoinRes.Unmarshal(m, b)
}
func (m *EventJoinRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventJoinRes.Marshal(b, m, deterministic)
}
func (dst *EventJoinRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventJoinRes.Merge(dst, src)
}
func (m *EventJoinRes) XXX_Size() int {
	return xxx_messageInfo_EventJoinRes.Size(m)
}
func (m *EventJoinRes) XXX_DiscardUnknown() {
	xxx_messageInfo_EventJoinRes.DiscardUnknown(m)
}

var xxx_messageInfo_EventJoinRes proto.InternalMessageInfo

func (m *EventJoinRes) GetEventMeta() *chat.EventMeta {
	if m != nil {
		return m.EventMeta
	}
	return nil
}

type EventLeaveReq struct {
	Auth                 *EventAuth `protobuf:"bytes,1,opt,name=auth" json:"auth,omitempty"`
	Uuid                 string     `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	ChannelName          string     `protobuf:"bytes,3,opt,name=channel_name,json=channelName" json:"channel_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *EventLeaveReq) Reset()         { *m = EventLeaveReq{} }
func (m *EventLeaveReq) String() string { return proto.CompactTextString(m) }
func (*EventLeaveReq) ProtoMessage()    {}
func (*EventLeaveReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_channel_9b00e7170ce8ee4c, []int{7}
}
func (m *EventLeaveReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventLeaveReq.Unmarshal(m, b)
}
func (m *EventLeaveReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventLeaveReq.Marshal(b, m, deterministic)
}
func (dst *EventLeaveReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventLeaveReq.Merge(dst, src)
}
func (m *EventLeaveReq) XXX_Size() int {
	return xxx_messageInfo_EventLeaveReq.Size(m)
}
func (m *EventLeaveReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EventLeaveReq.DiscardUnknown(m)
}

var xxx_messageInfo_EventLeaveReq proto.InternalMessageInfo

func (m *EventLeaveReq) GetAuth() *EventAuth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *EventLeaveReq) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *EventLeaveReq) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

type EventLeaveRes struct {
	EventMeta            *chat.EventMeta `protobuf:"bytes,1,opt,name=event_meta,json=eventMeta" json:"event_meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *EventLeaveRes) Reset()         { *m = EventLeaveRes{} }
func (m *EventLeaveRes) String() string { return proto.CompactTextString(m) }
func (*EventLeaveRes) ProtoMessage()    {}
func (*EventLeaveRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_channel_9b00e7170ce8ee4c, []int{8}
}
func (m *EventLeaveRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventLeaveRes.Unmarshal(m, b)
}
func (m *EventLeaveRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventLeaveRes.Marshal(b, m, deterministic)
}
func (dst *EventLeaveRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventLeaveRes.Merge(dst, src)
}
func (m *EventLeaveRes) XXX_Size() int {
	return xxx_messageInfo_EventLeaveRes.Size(m)
}
func (m *EventLeaveRes) XXX_DiscardUnknown() {
	xxx_messageInfo_EventLeaveRes.DiscardUnknown(m)
}

var xxx_messageInfo_EventLeaveRes proto.InternalMessageInfo

func (m *EventLeaveRes) GetEventMeta() *chat.EventMeta {
	if m != nil {
		return m.EventMeta
	}
	return nil
}

type EventTypeReq struct {
	Auth                 *EventAuth `protobuf:"bytes,1,opt,name=auth" json:"auth,omitempty"`
	Uuid                 string     `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	ChannelName          string     `protobuf:"bytes,3,opt,name=channel_name,json=channelName" json:"channel_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *EventTypeReq) Reset()         { *m = EventTypeReq{} }
func (m *EventTypeReq) String() string { return proto.CompactTextString(m) }
func (*EventTypeReq) ProtoMessage()    {}
func (*EventTypeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_channel_9b00e7170ce8ee4c, []int{9}
}
func (m *EventTypeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventTypeReq.Unmarshal(m, b)
}
func (m *EventTypeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventTypeReq.Marshal(b, m, deterministic)
}
func (dst *EventTypeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventTypeReq.Merge(dst, src)
}
func (m *EventTypeReq) XXX_Size() int {
	return xxx_messageInfo_EventTypeReq.Size(m)
}
func (m *EventTypeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EventTypeReq.DiscardUnknown(m)
}

var xxx_messageInfo_EventTypeReq proto.InternalMessageInfo

func (m *EventTypeReq) GetAuth() *EventAuth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *EventTypeReq) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *EventTypeReq) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

type EventTypeRes struct {
	EventMeta            *chat.EventMeta `protobuf:"bytes,1,opt,name=event_meta,json=eventMeta" json:"event_meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *EventTypeRes) Reset()         { *m = EventTypeRes{} }
func (m *EventTypeRes) String() string { return proto.CompactTextString(m) }
func (*EventTypeRes) ProtoMessage()    {}
func (*EventTypeRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_channel_9b00e7170ce8ee4c, []int{10}
}
func (m *EventTypeRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventTypeRes.Unmarshal(m, b)
}
func (m *EventTypeRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventTypeRes.Marshal(b, m, deterministic)
}
func (dst *EventTypeRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventTypeRes.Merge(dst, src)
}
func (m *EventTypeRes) XXX_Size() int {
	return xxx_messageInfo_EventTypeRes.Size(m)
}
func (m *EventTypeRes) XXX_DiscardUnknown() {
	xxx_messageInfo_EventTypeRes.DiscardUnknown(m)
}

var xxx_messageInfo_EventTypeRes proto.InternalMessageInfo

func (m *EventTypeRes) GetEventMeta() *chat.EventMeta {
	if m != nil {
		return m.EventMeta
	}
	return nil
}

type EventSendReq struct {
	Auth                 *EventAuth  `protobuf:"bytes,1,opt,name=auth" json:"auth,omitempty"`
	Uuid                 string      `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	ChannelName          string      `protobuf:"bytes,3,opt,name=channel_name,json=channelName" json:"channel_name,omitempty"`
	Entry                *chat.Entry `protobuf:"bytes,4,opt,name=entry" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *EventSendReq) Reset()         { *m = EventSendReq{} }
func (m *EventSendReq) String() string { return proto.CompactTextString(m) }
func (*EventSendReq) ProtoMessage()    {}
func (*EventSendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_channel_9b00e7170ce8ee4c, []int{11}
}
func (m *EventSendReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventSendReq.Unmarshal(m, b)
}
func (m *EventSendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventSendReq.Marshal(b, m, deterministic)
}
func (dst *EventSendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventSendReq.Merge(dst, src)
}
func (m *EventSendReq) XXX_Size() int {
	return xxx_messageInfo_EventSendReq.Size(m)
}
func (m *EventSendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EventSendReq.DiscardUnknown(m)
}

var xxx_messageInfo_EventSendReq proto.InternalMessageInfo

func (m *EventSendReq) GetAuth() *EventAuth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *EventSendReq) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *EventSendReq) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *EventSendReq) GetEntry() *chat.Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type EventSendRes struct {
	EventMeta            *chat.EventMeta `protobuf:"bytes,1,opt,name=event_meta,json=eventMeta" json:"event_meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *EventSendRes) Reset()         { *m = EventSendRes{} }
func (m *EventSendRes) String() string { return proto.CompactTextString(m) }
func (*EventSendRes) ProtoMessage()    {}
func (*EventSendRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_channel_9b00e7170ce8ee4c, []int{12}
}
func (m *EventSendRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventSendRes.Unmarshal(m, b)
}
func (m *EventSendRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventSendRes.Marshal(b, m, deterministic)
}
func (dst *EventSendRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventSendRes.Merge(dst, src)
}
func (m *EventSendRes) XXX_Size() int {
	return xxx_messageInfo_EventSendRes.Size(m)
}
func (m *EventSendRes) XXX_DiscardUnknown() {
	xxx_messageInfo_EventSendRes.DiscardUnknown(m)
}

var xxx_messageInfo_EventSendRes proto.InternalMessageInfo

func (m *EventSendRes) GetEventMeta() *chat.EventMeta {
	if m != nil {
		return m.EventMeta
	}
	return nil
}

type GetChannelReq struct {
	ChannelName          string   `protobuf:"bytes,1,opt,name=channel_name,json=channelName" json:"channel_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChannelReq) Reset()         { *m = GetChannelReq{} }
func (m *GetChannelReq) String() string { return proto.CompactTextString(m) }
func (*GetChannelReq) ProtoMessage()    {}
func (*GetChannelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_channel_9b00e7170ce8ee4c, []int{13}
}
func (m *GetChannelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelReq.Unmarshal(m, b)
}
func (m *GetChannelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelReq.Marshal(b, m, deterministic)
}
func (dst *GetChannelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelReq.Merge(dst, src)
}
func (m *GetChannelReq) XXX_Size() int {
	return xxx_messageInfo_GetChannelReq.Size(m)
}
func (m *GetChannelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelReq proto.InternalMessageInfo

func (m *GetChannelReq) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

type GetChannelRes struct {
	Channel              *chat.Channel `protobuf:"bytes,1,opt,name=channel" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetChannelRes) Reset()         { *m = GetChannelRes{} }
func (m *GetChannelRes) String() string { return proto.CompactTextString(m) }
func (*GetChannelRes) ProtoMessage()    {}
func (*GetChannelRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_channel_9b00e7170ce8ee4c, []int{14}
}
func (m *GetChannelRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelRes.Unmarshal(m, b)
}
func (m *GetChannelRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelRes.Marshal(b, m, deterministic)
}
func (dst *GetChannelRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelRes.Merge(dst, src)
}
func (m *GetChannelRes) XXX_Size() int {
	return xxx_messageInfo_GetChannelRes.Size(m)
}
func (m *GetChannelRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelRes proto.InternalMessageInfo

func (m *GetChannelRes) GetChannel() *chat.Channel {
	if m != nil {
		return m.Channel
	}
	return nil
}

type ListenUserEventReq struct {
	ChannelName          string   `protobuf:"bytes,1,opt,name=channel_name,json=channelName" json:"channel_name,omitempty"`
	FromSequence         uint64   `protobuf:"varint,2,opt,name=from_sequence,json=fromSequence" json:"from_sequence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListenUserEventReq) Reset()         { *m = ListenUserEventReq{} }
func (m *ListenUserEventReq) String() string { return proto.CompactTextString(m) }
func (*ListenUserEventReq) ProtoMessage()    {}
func (*ListenUserEventReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_channel_9b00e7170ce8ee4c, []int{15}
}
func (m *ListenUserEventReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenUserEventReq.Unmarshal(m, b)
}
func (m *ListenUserEventReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenUserEventReq.Marshal(b, m, deterministic)
}
func (dst *ListenUserEventReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenUserEventReq.Merge(dst, src)
}
func (m *ListenUserEventReq) XXX_Size() int {
	return xxx_messageInfo_ListenUserEventReq.Size(m)
}
func (m *ListenUserEventReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenUserEventReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListenUserEventReq proto.InternalMessageInfo

func (m *ListenUserEventReq) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *ListenUserEventReq) GetFromSequence() uint64 {
	if m != nil {
		return m.FromSequence
	}
	return 0
}

type ListenUserEventRes struct {
	Event                *chat.ChannelUserEvent `protobuf:"bytes,1,opt,name=event" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ListenUserEventRes) Reset()         { *m = ListenUserEventRes{} }
func (m *ListenUserEventRes) String() string { return proto.CompactTextString(m) }
func (*ListenUserEventRes) ProtoMessage()    {}
func (*ListenUserEventRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_channel_9b00e7170ce8ee4c, []int{16}
}
func (m *ListenUserEventRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenUserEventRes.Unmarshal(m, b)
}
func (m *ListenUserEventRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenUserEventRes.Marshal(b, m, deterministic)
}
func (dst *ListenUserEventRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenUserEventRes.Merge(dst, src)
}
func (m *ListenUserEventRes) XXX_Size() int {
	return xxx_messageInfo_ListenUserEventRes.Size(m)
}
func (m *ListenUserEventRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenUserEventRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListenUserEventRes proto.InternalMessageInfo

func (m *ListenUserEventRes) GetEvent() *chat.ChannelUserEvent {
	if m != nil {
		return m.Event
	}
	return nil
}

type ListChannelReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListChannelReq) Reset()         { *m = ListChannelReq{} }
func (m *ListChannelReq) String() string { return proto.CompactTextString(m) }
func (*ListChannelReq) ProtoMessage()    {}
func (*ListChannelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_channel_9b00e7170ce8ee4c, []int{17}
}
func (m *ListChannelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListChannelReq.Unmarshal(m, b)
}
func (m *ListChannelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListChannelReq.Marshal(b, m, deterministic)
}
func (dst *ListChannelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListChannelReq.Merge(dst, src)
}
func (m *ListChannelReq) XXX_Size() int {
	return xxx_messageInfo_ListChannelReq.Size(m)
}
func (m *ListChannelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListChannelReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListChannelReq proto.InternalMessageInfo

type ListChannelRes struct {
	Channels             []*chat.ChannelMeta `protobuf:"bytes,1,rep,name=channels" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListChannelRes) Reset()         { *m = ListChannelRes{} }
func (m *ListChannelRes) String() string { return proto.CompactTextString(m) }
func (*ListChannelRes) ProtoMessage()    {}
func (*ListChannelRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_channel_9b00e7170ce8ee4c, []int{18}
}
func (m *ListChannelRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListChannelRes.Unmarshal(m, b)
}
func (m *ListChannelRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListChannelRes.Marshal(b, m, deterministic)
}
func (dst *ListChannelRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListChannelRes.Merge(dst, src)
}
func (m *ListChannelRes) XXX_Size() int {
	return xxx_messageInfo_ListChannelRes.Size(m)
}
func (m *ListChannelRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListChannelRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListChannelRes proto.InternalMessageInfo

func (m *ListChannelRes) GetChannels() []*chat.ChannelMeta {
	if m != nil {
		return m.Channels
	}
	return nil
}

func init() {
	proto.RegisterType((*EventAuth)(nil), "iyag.io.chat.chatsrv.EventAuth")
	proto.RegisterType((*EventCreateReq)(nil), "iyag.io.chat.chatsrv.EventCreateReq")
	proto.RegisterType((*EventCreateRes)(nil), "iyag.io.chat.chatsrv.EventCreateRes")
	proto.RegisterType((*EventArchiveReq)(nil), "iyag.io.chat.chatsrv.EventArchiveReq")
	proto.RegisterType((*EventArchiveRes)(nil), "iyag.io.chat.chatsrv.EventArchiveRes")
	proto.RegisterType((*EventJoinReq)(nil), "iyag.io.chat.chatsrv.EventJoinReq")
	proto.RegisterType((*EventJoinRes)(nil), "iyag.io.chat.chatsrv.EventJoinRes")
	proto.RegisterType((*EventLeaveReq)(nil), "iyag.io.chat.chatsrv.EventLeaveReq")
	proto.RegisterType((*EventLeaveRes)(nil), "iyag.io.chat.chatsrv.EventLeaveRes")
	proto.RegisterType((*EventTypeReq)(nil), "iyag.io.chat.chatsrv.EventTypeReq")
	proto.RegisterType((*EventTypeRes)(nil), "iyag.io.chat.chatsrv.EventTypeRes")
	proto.RegisterType((*EventSendReq)(nil), "iyag.io.chat.chatsrv.EventSendReq")
	proto.RegisterType((*EventSendRes)(nil), "iyag.io.chat.chatsrv.EventSendRes")
	proto.RegisterType((*GetChannelReq)(nil), "iyag.io.chat.chatsrv.GetChannelReq")
	proto.RegisterType((*GetChannelRes)(nil), "iyag.io.chat.chatsrv.GetChannelRes")
	proto.RegisterType((*ListenUserEventReq)(nil), "iyag.io.chat.chatsrv.ListenUserEventReq")
	proto.RegisterType((*ListenUserEventRes)(nil), "iyag.io.chat.chatsrv.ListenUserEventRes")
	proto.RegisterType((*ListChannelReq)(nil), "iyag.io.chat.chatsrv.ListChannelReq")
	proto.RegisterType((*ListChannelRes)(nil), "iyag.io.chat.chatsrv.ListChannelRes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Channel service

type ChannelClient interface {
	EventCreate(ctx context.Context, in *EventCreateReq, opts ...grpc.CallOption) (*EventCreateRes, error)
	EventArchive(ctx context.Context, in *EventArchiveReq, opts ...grpc.CallOption) (*EventArchiveRes, error)
	EventJoin(ctx context.Context, in *EventJoinReq, opts ...grpc.CallOption) (*EventJoinRes, error)
	EventLeave(ctx context.Context, in *EventLeaveReq, opts ...grpc.CallOption) (*EventLeaveRes, error)
	EventType(ctx context.Context, in *EventTypeReq, opts ...grpc.CallOption) (*EventTypeRes, error)
	EventSend(ctx context.Context, in *EventSendReq, opts ...grpc.CallOption) (*EventSendRes, error)
	GetChannel(ctx context.Context, in *GetChannelReq, opts ...grpc.CallOption) (*GetChannelRes, error)
	ListenUserEvent(ctx context.Context, in *ListenUserEventReq, opts ...grpc.CallOption) (Channel_ListenUserEventClient, error)
	ListChannel(ctx context.Context, in *ListChannelReq, opts ...grpc.CallOption) (*ListChannelRes, error)
}

type channelClient struct {
	cc *grpc.ClientConn
}

func NewChannelClient(cc *grpc.ClientConn) ChannelClient {
	return &channelClient{cc}
}

func (c *channelClient) EventCreate(ctx context.Context, in *EventCreateReq, opts ...grpc.CallOption) (*EventCreateRes, error) {
	out := new(EventCreateRes)
	err := grpc.Invoke(ctx, "/iyag.io.chat.chatsrv.Channel/EventCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelClient) EventArchive(ctx context.Context, in *EventArchiveReq, opts ...grpc.CallOption) (*EventArchiveRes, error) {
	out := new(EventArchiveRes)
	err := grpc.Invoke(ctx, "/iyag.io.chat.chatsrv.Channel/EventArchive", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelClient) EventJoin(ctx context.Context, in *EventJoinReq, opts ...grpc.CallOption) (*EventJoinRes, error) {
	out := new(EventJoinRes)
	err := grpc.Invoke(ctx, "/iyag.io.chat.chatsrv.Channel/EventJoin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelClient) EventLeave(ctx context.Context, in *EventLeaveReq, opts ...grpc.CallOption) (*EventLeaveRes, error) {
	out := new(EventLeaveRes)
	err := grpc.Invoke(ctx, "/iyag.io.chat.chatsrv.Channel/EventLeave", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelClient) EventType(ctx context.Context, in *EventTypeReq, opts ...grpc.CallOption) (*EventTypeRes, error) {
	out := new(EventTypeRes)
	err := grpc.Invoke(ctx, "/iyag.io.chat.chatsrv.Channel/EventType", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelClient) EventSend(ctx context.Context, in *EventSendReq, opts ...grpc.CallOption) (*EventSendRes, error) {
	out := new(EventSendRes)
	err := grpc.Invoke(ctx, "/iyag.io.chat.chatsrv.Channel/EventSend", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelClient) GetChannel(ctx context.Context, in *GetChannelReq, opts ...grpc.CallOption) (*GetChannelRes, error) {
	out := new(GetChannelRes)
	err := grpc.Invoke(ctx, "/iyag.io.chat.chatsrv.Channel/GetChannel", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelClient) ListenUserEvent(ctx context.Context, in *ListenUserEventReq, opts ...grpc.CallOption) (Channel_ListenUserEventClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Channel_serviceDesc.Streams[0], c.cc, "/iyag.io.chat.chatsrv.Channel/ListenUserEvent", opts...)
	if err != nil {
		return nil, err
	}
	x := &channelListenUserEventClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Channel_ListenUserEventClient interface {
	Recv() (*ListenUserEventRes, error)
	grpc.ClientStream
}

type channelListenUserEventClient struct {
	grpc.ClientStream
}

func (x *channelListenUserEventClient) Recv() (*ListenUserEventRes, error) {
	m := new(ListenUserEventRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *channelClient) ListChannel(ctx context.Context, in *ListChannelReq, opts ...grpc.CallOption) (*ListChannelRes, error) {
	out := new(ListChannelRes)
	err := grpc.Invoke(ctx, "/iyag.io.chat.chatsrv.Channel/ListChannel", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Channel service

type ChannelServer interface {
	EventCreate(context.Context, *EventCreateReq) (*EventCreateRes, error)
	EventArchive(context.Context, *EventArchiveReq) (*EventArchiveRes, error)
	EventJoin(context.Context, *EventJoinReq) (*EventJoinRes, error)
	EventLeave(context.Context, *EventLeaveReq) (*EventLeaveRes, error)
	EventType(context.Context, *EventTypeReq) (*EventTypeRes, error)
	EventSend(context.Context, *EventSendReq) (*EventSendRes, error)
	GetChannel(context.Context, *GetChannelReq) (*GetChannelRes, error)
	ListenUserEvent(*ListenUserEventReq, Channel_ListenUserEventServer) error
	ListChannel(context.Context, *ListChannelReq) (*ListChannelRes, error)
}

func RegisterChannelServer(s *grpc.Server, srv ChannelServer) {
	s.RegisterService(&_Channel_serviceDesc, srv)
}

func _Channel_EventCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelServer).EventCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iyag.io.chat.chatsrv.Channel/EventCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelServer).EventCreate(ctx, req.(*EventCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Channel_EventArchive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventArchiveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelServer).EventArchive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iyag.io.chat.chatsrv.Channel/EventArchive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelServer).EventArchive(ctx, req.(*EventArchiveReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Channel_EventJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventJoinReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelServer).EventJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iyag.io.chat.chatsrv.Channel/EventJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelServer).EventJoin(ctx, req.(*EventJoinReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Channel_EventLeave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventLeaveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelServer).EventLeave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iyag.io.chat.chatsrv.Channel/EventLeave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelServer).EventLeave(ctx, req.(*EventLeaveReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Channel_EventType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventTypeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelServer).EventType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iyag.io.chat.chatsrv.Channel/EventType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelServer).EventType(ctx, req.(*EventTypeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Channel_EventSend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventSendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelServer).EventSend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iyag.io.chat.chatsrv.Channel/EventSend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelServer).EventSend(ctx, req.(*EventSendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Channel_GetChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChannelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelServer).GetChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iyag.io.chat.chatsrv.Channel/GetChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelServer).GetChannel(ctx, req.(*GetChannelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Channel_ListenUserEvent_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListenUserEventReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChannelServer).ListenUserEvent(m, &channelListenUserEventServer{stream})
}

type Channel_ListenUserEventServer interface {
	Send(*ListenUserEventRes) error
	grpc.ServerStream
}

type channelListenUserEventServer struct {
	grpc.ServerStream
}

func (x *channelListenUserEventServer) Send(m *ListenUserEventRes) error {
	return x.ServerStream.SendMsg(m)
}

func _Channel_ListChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListChannelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelServer).ListChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iyag.io.chat.chatsrv.Channel/ListChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelServer).ListChannel(ctx, req.(*ListChannelReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Channel_serviceDesc = grpc.ServiceDesc{
	ServiceName: "iyag.io.chat.chatsrv.Channel",
	HandlerType: (*ChannelServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EventCreate",
			Handler:    _Channel_EventCreate_Handler,
		},
		{
			MethodName: "EventArchive",
			Handler:    _Channel_EventArchive_Handler,
		},
		{
			MethodName: "EventJoin",
			Handler:    _Channel_EventJoin_Handler,
		},
		{
			MethodName: "EventLeave",
			Handler:    _Channel_EventLeave_Handler,
		},
		{
			MethodName: "EventType",
			Handler:    _Channel_EventType_Handler,
		},
		{
			MethodName: "EventSend",
			Handler:    _Channel_EventSend_Handler,
		},
		{
			MethodName: "GetChannel",
			Handler:    _Channel_GetChannel_Handler,
		},
		{
			MethodName: "ListChannel",
			Handler:    _Channel_ListChannel_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListenUserEvent",
			Handler:       _Channel_ListenUserEvent_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "iyag.io/chat/chatsrv/channel.proto",
}

func init() {
	proto.RegisterFile("iyag.io/chat/chatsrv/channel.proto", fileDescriptor_channel_9b00e7170ce8ee4c)
}

var fileDescriptor_channel_9b00e7170ce8ee4c = []byte{
	// 615 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0xdd, 0x6e, 0xd3, 0x50,
	0x0c, 0x56, 0x58, 0xb7, 0xae, 0x6e, 0xbb, 0x21, 0x33, 0x44, 0x08, 0x12, 0x8c, 0x0c, 0xa4, 0x72,
	0x93, 0xa1, 0x0e, 0xb8, 0x44, 0xc0, 0x04, 0x65, 0xd3, 0xe0, 0x22, 0x05, 0x24, 0xd0, 0xa4, 0x2a,
	0xb4, 0x66, 0x8d, 0xa0, 0xc9, 0x96, 0x73, 0x5a, 0xa9, 0xfc, 0x3c, 0x0e, 0x8f, 0xc0, 0xfb, 0xa1,
	0x73, 0xe2, 0x36, 0x4b, 0xd6, 0xa5, 0x51, 0x91, 0xca, 0x4d, 0x9b, 0xda, 0x9f, 0xfd, 0x7d, 0x76,
	0x8e, 0x7d, 0x0a, 0xb6, 0x3f, 0xf6, 0x4e, 0x1c, 0x3f, 0xdc, 0xed, 0xf6, 0x3d, 0xa9, 0x3f, 0x44,
	0x34, 0x52, 0xdf, 0x41, 0x40, 0xdf, 0x9c, 0xd3, 0x28, 0x94, 0x21, 0x6e, 0x31, 0xc6, 0x51, 0x6e,
	0x87, 0x31, 0x96, 0x99, 0x8a, 0xa4, 0x11, 0x05, 0x32, 0xc6, 0x67, 0x3d, 0x81, 0x8c, 0xc6, 0xec,
	0xb1, 0xb2, 0x6c, 0x09, 0x8b, 0xfd, 0x14, 0x2a, 0x2f, 0x55, 0x92, 0xe7, 0x43, 0xd9, 0xc7, 0x5b,
	0x50, 0xf1, 0x86, 0xb2, 0x1f, 0x46, 0x1d, 0xbf, 0x67, 0x1a, 0xdb, 0x46, 0xa3, 0xe2, 0xae, 0xc7,
	0x86, 0x83, 0x1e, 0x6e, 0xc1, 0xaa, 0x0c, 0xbf, 0x52, 0x60, 0x5e, 0xd1, 0x8e, 0xf8, 0x87, 0xfd,
	0x13, 0x36, 0x74, 0xfc, 0x7e, 0x44, 0x9e, 0x24, 0x97, 0xce, 0x70, 0x0f, 0x4a, 0x2a, 0x46, 0xc7,
	0x57, 0x9b, 0x77, 0x9c, 0x59, 0x65, 0x38, 0x53, 0x4e, 0x57, 0x83, 0x11, 0xa1, 0x34, 0x1c, 0xfa,
	0x3d, 0xce, 0xad, 0x9f, 0xf1, 0x2e, 0xd4, 0x58, 0x6b, 0x27, 0xf0, 0x06, 0x64, 0xae, 0x68, 0x5f,
	0x95, 0x6d, 0x6f, 0xbd, 0x01, 0xd9, 0xaf, 0x33, 0xec, 0x02, 0x9f, 0x00, 0xe8, 0xa6, 0x74, 0x06,
	0x24, 0x3d, 0xd6, 0x70, 0x23, 0xad, 0x41, 0x47, 0xbc, 0x21, 0xe9, 0xb9, 0x15, 0x9a, 0x3c, 0xda,
	0xbf, 0x60, 0x33, 0xd6, 0x14, 0x75, 0xfb, 0xfe, 0x68, 0xe9, 0x85, 0x1c, 0x64, 0xe9, 0x17, 0xaf,
	0xe4, 0x3b, 0xd4, 0xb4, 0xfd, 0x30, 0xf4, 0x83, 0x65, 0x97, 0xf1, 0x2a, 0xc5, 0xbd, 0x78, 0x0d,
	0x3f, 0xa0, 0xae, 0xed, 0x47, 0xe4, 0x2d, 0xff, 0x5d, 0xb4, 0xd2, 0xe4, 0xff, 0xfe, 0x26, 0xde,
	0x8d, 0x4f, 0xe9, 0x7f, 0xbd, 0x89, 0x98, 0x7b, 0xf1, 0x1a, 0x7e, 0x1b, 0x9c, 0xa8, 0x4d, 0x41,
	0x6f, 0xc9, 0x45, 0xe0, 0x03, 0x58, 0xd5, 0x7b, 0xcc, 0x2c, 0x69, 0xb2, 0x6b, 0x19, 0xbd, 0xca,
	0xe5, 0xc6, 0x88, 0x69, 0xbd, 0xb1, 0xcc, 0xc5, 0xeb, 0x6d, 0x42, 0xbd, 0x45, 0x72, 0x3f, 0x16,
	0xa1, 0xea, 0xcd, 0xca, 0x34, 0x2e, 0xf6, 0xfa, 0x59, 0x3a, 0x46, 0xe0, 0x2e, 0x94, 0xd9, 0xcf,
	0xcc, 0xd7, 0xd3, 0xcc, 0x13, 0xe8, 0x04, 0x65, 0x1f, 0x03, 0x1e, 0xf9, 0x42, 0x52, 0xf0, 0x5e,
	0x50, 0xa4, 0x75, 0x15, 0xa3, 0xc6, 0x1d, 0xa8, 0x7f, 0x89, 0xc2, 0x41, 0x47, 0xd0, 0xd9, 0x90,
	0x82, 0x2e, 0xe9, 0x0e, 0x97, 0xdc, 0x9a, 0x32, 0xb6, 0xd9, 0x66, 0x1f, 0xce, 0xc8, 0x2e, 0xf0,
	0x11, 0xac, 0xea, 0xb2, 0x59, 0xe2, 0xed, 0x99, 0x12, 0x93, 0x88, 0x18, 0x6c, 0x5f, 0x85, 0x0d,
	0x95, 0x2b, 0x69, 0x90, 0xdd, 0xca, 0x58, 0x04, 0x3e, 0x86, 0x75, 0xd6, 0x28, 0x4c, 0x63, 0x7b,
	0xa5, 0x51, 0x6d, 0xde, 0x9c, 0x99, 0x5c, 0xf7, 0x7e, 0x0a, 0x6d, 0xfe, 0x59, 0x83, 0x32, 0x7b,
	0xf0, 0x23, 0x54, 0xcf, 0x2d, 0x76, 0xbc, 0x97, 0x73, 0xcc, 0xa6, 0x37, 0x8f, 0x55, 0x04, 0x25,
	0xf0, 0x98, 0x4f, 0x0a, 0xaf, 0x5a, 0xbc, 0x9f, 0x77, 0x84, 0xa7, 0xb7, 0x81, 0x55, 0x08, 0x26,
	0xb0, 0xcd, 0xf7, 0xa9, 0xda, 0x80, 0x68, 0xe7, 0xc4, 0xf0, 0x7a, 0xb6, 0xe6, 0x63, 0x04, 0x7e,
	0x00, 0x48, 0x36, 0x12, 0xee, 0xe4, 0x44, 0x4c, 0x16, 0xa6, 0x55, 0x00, 0x94, 0x88, 0x55, 0x4b,
	0x22, 0x57, 0x2c, 0x6f, 0x30, 0x6b, 0x3e, 0x26, 0x49, 0xaa, 0x26, 0x31, 0x37, 0x29, 0x6f, 0x14,
	0x6b, 0x3e, 0x46, 0x77, 0x20, 0x19, 0xb1, 0xcb, 0x3a, 0x90, 0x1a, 0x5c, 0xab, 0x00, 0x48, 0xe0,
	0x09, 0x6c, 0x66, 0x46, 0x03, 0x1b, 0xb3, 0xe3, 0x2e, 0xce, 0xa7, 0x55, 0x14, 0x29, 0x1e, 0x1a,
	0xea, 0x40, 0x9f, 0x9b, 0x92, 0xcb, 0x0e, 0x74, 0x7a, 0xb4, 0xac, 0x22, 0x28, 0xf1, 0xa2, 0xf2,
	0xa9, 0xcc, 0x9e, 0xcf, 0x6b, 0xfa, 0x4f, 0xdd, 0xde, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xcc,
	0xd9, 0xb3, 0x97, 0x60, 0x0a, 0x00, 0x00,
}
